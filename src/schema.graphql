interface Person {
    id: ID!
    name: String!
    last_name: String!
    age: Int
}

union GlobalSerach = Category | Product

type Admin implements Person {
    id: ID!
    name: String!
    last_name: String!
    age: Int
    email: String!
    password: String!
    phone: String!
}

type Customer implements Person {
    id: ID!
    name: String!
    last_name: String!
    age: Int
    card: String
    ubication: String
}

type Category {
    id: ID!
    name: String!
    photo: String
    priority: Int
    products: [Product]
}

type Product {
    id: ID!
    name: String!
    description: String
    photo: String
}

type Query {
    "Return all categories"
    getCategories: [Category]
    "Return all products from a category"
    getCategory(id: ID!): [Product]
    "Return a product description"
    getProduct(id: ID!): Product
    "Ejecuta busqueda de todos los productos y categorias"
    searchItems(keyword: String!): [GlobalSerach]
    "Return all admins"
    getAdmins: [Admin]
    "Return an specific admin"
    getAdmin(id: ID!): Admin
    "Return all customers"
    getCustomers: [Customer]
}

input CreateAdmin {
    name: String!
    last_name: String!
    age: Int
    email: String!
    password: String!
    phone: String!
}

input CreateCustomer {
    name: String!
    last_name: String!
    age: Int
    card: String
    ubication: String
}

input CreateCategory {
    name: String!
    photo: String
    priority: Int
    product: [ID]
}

input CreateProduct {
    name: String!
    description: String
    photo: String
    category: ID
}

input EditAdmin {
    name: String
    last_name: String
    age: Int
    email: String
    password: String
    phone: String
}

type Mutation {
    "Create an Admin"
    createAdmin(input: CreateAdmin): Admin
    "Create a Customer"
    createCustomer(input: CreateCustomer): Customer
    "Create Category"
    createCategory(input:CreateCategory): Category
    "Create a Product"
    createProduct(input: CreateProduct): Product
    "Edit an Admin"
    editAdmin(id: ID!, input: EditAdmin): Admin
    "Delete an Admin"
    deleteAdmin(id: ID!): Boolean
}
